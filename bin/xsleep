#!/bin/bash

#
# Xavier
# Sleep with progress bar
#

if [ -z "$1" ]; then
	echo "Usage : $0 time_to_sleep_in_seconds"
	exit 1
fi

function refreshBar() {
	currentProgress=$1
	awk "BEGIN { printf \"\r\" ; printf(\"%02d\", $currentProgress); printf \"%% [\" ; while (i++<$currentProgress) printf \"=\"; while (j++<(100-$currentProgress)) printf \".\"; printf \"]\"}"
}

# used to sleep less than 100 seconds (refresh each seconds)
function everySecondStrategy() {
	timeToSleep=$1
	for current in $(eval echo {0..$timeToSleep})
	do
		currentProgress=$(($current*100/$timeToSleep))
		refreshBar ${currentProgress}
		sleep 1
	done
	echo
}

# used to sleep more than 100 seconds, compute time to sleep between refresh
function fixedSleepTimeStrategy() {
	timeToSleep=$1
	timeToSleepBetweenSteps=$(awk "BEGIN {printf \"%.2f\",${timeToSleep}/100.}")
	for currentProgress in {0..100}
	do
		refreshBar ${currentProgress}
		sleep ${timeToSleepBetweenSteps}
	done
	echo
}

# main

timeToSleep=$1

if [ $timeToSleep -lt 100 ]; then
	everySecondStrategy ${timeToSleep}
else
	fixedSleepTimeStrategy ${timeToSleep}
fi

