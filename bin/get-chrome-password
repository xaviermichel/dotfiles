#!/usr/bin/env python
# -*- coding: UTF-8 -*-

import sys
import gnomekeyring as gkey

class Keyring(object):
    def __init__(self, origin_url):
        self._origin_url = origin_url
        self._keyring = gkey.get_default_keyring_sync()

    def has_credentials(self):
        try:
            attrs = {"origin_url": self._origin_url}
            items = gkey.find_items_sync(gkey.ITEM_NETWORK_PASSWORD, attrs)
            return len(items) > 0
        except gkey.DeniedError:
            return False
        except gkey.NoMatchError:
            return False

    def get_credentials(self):
        attrs = {"origin_url": self._origin_url}
        items = gkey.find_items_sync(gkey.ITEM_NETWORK_PASSWORD, attrs)
        return ":".join([items[0].attributes["username_value"], items[0].secret])

def main(origin_url):
    #print("Getting cretential for " + origin_url)
    kr = Keyring(origin_url)

    if not kr.has_credentials():
        print("unknown:unknown")
    else:
        print(kr.get_credentials())

if __name__ == "__main__":
    if len(sys.argv) != 2 :
        print("Expected one argument : url")
        exit(1)
    url = sys.argv[1]
    if not url.startswith('http'):
        url = 'https://' + url
    if not url.endswith('/'):
        url = url + '/'
    main(url)

